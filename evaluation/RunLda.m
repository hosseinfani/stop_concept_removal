function RunLda(...
    mallet_base, ...
    mallet_corpus, ...
    stoplist_base, ...
    topicCount, ...
    wordCount,...
    threadCount,...
    output_base, ... 
    intervals)
    
%     file = fopen(['commands_' osname '.txt'],'w');
%     fclose(file);
    %file = fopen('/time_elapsed.txt','w');
    %%Note: for the threshold 0.0 all the methods output no stop concept. So,
    %%they all are gonna have the same input and output to the mallet! Run only
    %%for one and replicate for others in this exceptional threshold 0.0.
    
        for i = 1: length(intervals)
            for threshold = 0.0: 0.1: 1.0
                %import the stoplist from /output/{method}/{Xcr|Ftp|Wvl}_{Daily|Hourly}
                stoplist = [stoplist_base '_' intervals{i} '_' num2str(threshold, '%.1f') '.txt'];
                
                %1) Import documents to mallet object
                malletInput = [output_base '_' intervals{i} '_' num2str(threshold, '%.1f') '_input.mallet'];           
                command = [mallet_base 'mallet import-dir'...
                ' --input ' mallet_corpus ...
                ' --output ' malletInput ...
                ' --keep-sequence'...
                ' --save-text-in-source TRUE'...
                ' --remove-stopwords TRUE'...
                ' --stoplist-file ' stoplist ...
                ' --token-regex "[\p{N}]+" > ' malletInput '.out1 2>&1 '];%use '&' for asynch call 
                %%fwrite(file, command);
                %%fprintf(file, '\n');
                %%log command
                command
                tic
                system(command);
                time = toc;
                %fwrite(file, [command ', ' num2str(time) ', ']);
                
                %2) Train topics 
                malletOutput = [output_base '_' intervals{i} '_' num2str(threshold, '%.1f')];
                command = [mallet_base 'mallet train-topics'...
                ' --num-topics ' num2str(topicCount) ...
                ' --num-top-words ' num2str(wordCount) ... %The number of most probable words to print for each topic after model estimation. Default is 20
                ' --input ' malletInput ...
                ' --output-topic-keys ' malletOutput '_topic_top_words.txt'... %The filename in which to write the top words for each topic and any Dirichlet parameters.  By default this is null, indicating that no file will be written.
                ' --output-doc-topics ' malletOutput '_topic_document_weights.txt'... %The filename in which to write the topic proportions per document, at the end of the iterations.  By default this is null, indicating that no file will be written.
                ' --inferencer-filename ' malletOutput '_inferencer.mallet'...
                ' --evaluator-filename ' malletOutput '_evaluator.mallet'...
                ' --topic-word-weights-file ' malletOutput '_topic_word_weights.txt'... %The filename in which to write "unnormalized" weights for every topic and word type. Most of these will be equal to the smoothing parameter beta.
                ' --diagnostics-file ' malletOutput '_diagnostic.xml'... 
                ' --topic-word-weights-mode normalized' ...
                ' --num-threads ' num2str(threadCount) ' > ' malletOutput '.out2 2>&1'];
                %%fwrite(file, command);
                %%fprintf(file, '\n');
                command
                tic
                system(command);
                time = toc;
                %fwrite(file, [command ', ' num2str(time)]);
                %fprintf(file, '\n');           
            end
        end
    fclose(file);
end

